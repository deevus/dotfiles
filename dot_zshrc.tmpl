# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
{{- if eq .chezmoi.osRelease.id "arch" }}
export ZSH="/usr/share/oh-my-zsh"
{{ else }}
export ZSH="$HOME/.oh-my-zsh"
{{- end }}

eval "$(mise activate zsh)"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git git-flow github brew fzf direnv)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor 
export EDITOR='nvim'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#
alias gs="git sync"

export PATH="$HOME/.local/bin:/usr/local/opt/ruby/bin:/usr/local/lib/ruby/gems/3.0.0/bin:$PATH"

[ -f "$(brew --prefix)/etc/profile.d/z.sh" ] && source "$(brew --prefix)/etc/profile.d/z.sh"

source ~/.aliases

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin:$HOME/.composer/vendor/bin:$HOME/.cargo/bin"

{{ if eq .chezmoi.os "darwin" }}
export ANDROID_HOME="$HOME/Library/Android/sdk"
export PATH="$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools"
{{ end }}

set -o vi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export PATH="/opt/homebrew/bin:$PATH"
export PATH="/opt/homebrew/sbin:$PATH"
# Stop brew autoupdating when you want to install something
export HOMEBREW_NO_AUTO_UPDATE=1

arm() {
  arch -x86_64 $@
}

# Password Store 
export PASSWORD_STORE_ENABLE_EXTENSIONS=true

# Git configuration
export GITHUB_TOKEN={{ pass "Tokens/GitHub" }}
export GIT_CONFIG_COUNT=2
export GIT_CONFIG_KEY_0=github.accesstoken
export GIT_CONFIG_VALUE_0=$GITHUB_TOKEN
export GIT_CONFIG_KEY_1=core.excludesFile
export GIT_CONFIG_VALUE_1=~/.gitignore

# OpenAI 
export OPENAI_API_KEY={{ pass "Tokens/OpenAI" }}

# PHP lsp
export INTELEPHENSE_KEY={{ pass "Software/Intelephense" }}

eval "$(hub alias -s)"

# Fig post block. Keep at the bottom of this file.
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"

# Dotnet
export DOTNET_ROOT="/opt/homebrew/opt/dotnet/libexec"

# Deno 
export PATH="$HOME/.deno/bin:$PATH"

# Flutter/Dart
export PATH="$PATH":"$HOME/.pub-cache/bin"

# Windmill 
which wmill 2> /dev/null
if [[ $? -eq 0 ]]
then
  source <(wmill completions zsh)
fi

if [[ -f "$HOME/.nvm/nvm.sh" ]]
then
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

[ -d ~/.zvm/bin ] && export PATH="$HOME/.zvm/bin:$PATH"

[ -f "/home/linuxbrew/.linuxbrew/etc/profile.d/z.sh" ] && source /home/linuxbrew/.linuxbrew/etc/profile.d/z.sh

[ -f "$HOME/.cargo/bin/starship" ] && eval "$(starship init zsh)"
[ -f "$HOME/.cargo/bin/rtx" ] && eval "$(rtx activate zsh)"
[ -f "$HOME/.cargo/bin/eza" ] && alias ls=eza
[ -f "/opt/swift/usr/bin/swift" ] && export PATH="$PATH:/opt/swift/usr/bin"
alias sail='[ -f sail ] && sh sail || sh vendor/bin/sail'

[ -d "$HOME/.dotnet/tools" ] && export PATH="$PATH:$HOME/.dotnet/tools"

# pnpm
export PNPM_HOME="/Users/sh/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# bit
case ":$PATH:" in
  *":/Users/sh/bin:"*) ;;
  *) export PATH="$PATH:/Users/sh/bin" ;;
esac
# bit end

[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

if [[ -f "$HOME/zsh/zsh-llm-suggestions/zsh-llm-suggestions.zsh" ]]
then
  source ~/zsh/zsh-llm-suggestions/zsh-llm-suggestions.zsh
  bindkey '^o' zsh_llm_suggestions_openai # Ctrl + O to have OpenAI suggest a command given a English description
  bindkey '^[^o' zsh_llm_suggestions_openai_explain # Ctrl + alt + O to have OpenAI explain a command
  bindkey '^p' zsh_llm_suggestions_github_copilot # Ctrl + P to have GitHub Copilot suggest a command given a English description
  bindkey '^[^p' zsh_llm_suggestions_github_copilot_explain # Ctrl + alt + P to have GitHub Copilot explain a command
fi

if which swiftenv > /dev/null
then 
  eval "$(swiftenv init -)"; 
fi

# Deepseek 
export DEEP_SEEK_API_KEY="{{ pass "Tokens/DeepSeek" }}"

# RipGrep
export RIPGREP_CONFIG_PATH="$HOME/.config/ripgrep/.ripgreprc"
